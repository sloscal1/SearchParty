// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: contract.proto

package core.messages;

public final class EmploySearcher {
  private EmploySearcher() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ContractOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string dispatch_address = 1;
    /**
     * <code>required string dispatch_address = 1;</code>
     *
     * <pre>
     *The IPv4 address where the Dispatcher can be found.
     *e.g., 127.0.0.1, localhost, etc.
     * </pre>
     */
    boolean hasDispatchAddress();
    /**
     * <code>required string dispatch_address = 1;</code>
     *
     * <pre>
     *The IPv4 address where the Dispatcher can be found.
     *e.g., 127.0.0.1, localhost, etc.
     * </pre>
     */
    java.lang.String getDispatchAddress();
    /**
     * <code>required string dispatch_address = 1;</code>
     *
     * <pre>
     *The IPv4 address where the Dispatcher can be found.
     *e.g., 127.0.0.1, localhost, etc.
     * </pre>
     */
    com.google.protobuf.ByteString
        getDispatchAddressBytes();

    // required int32 dispatch_port = 2;
    /**
     * <code>required int32 dispatch_port = 2;</code>
     *
     * <pre>
     *The port that the dispatcher will be listening to.
     * </pre>
     */
    boolean hasDispatchPort();
    /**
     * <code>required int32 dispatch_port = 2;</code>
     *
     * <pre>
     *The port that the dispatcher will be listening to.
     * </pre>
     */
    int getDispatchPort();

    // optional int64 secret = 3;
    /**
     * <code>optional int64 secret = 3;</code>
     *
     * <pre>
     *The secret to share in the communications (should be unique per contract)
     * </pre>
     */
    boolean hasSecret();
    /**
     * <code>optional int64 secret = 3;</code>
     *
     * <pre>
     *The secret to share in the communications (should be unique per contract)
     * </pre>
     */
    long getSecret();
  }
  /**
   * Protobuf type {@code search.Contract}
   *
   * <pre>
   *This message comes with the startup of a new core.party.Searcher to
   *let that object know where the dispatcher is, and any other
   *pertinent details needed to get the experimentation architecture
   *up and running.
   * </pre>
   */
  public static final class Contract extends
      com.google.protobuf.GeneratedMessage
      implements ContractOrBuilder {
    // Use Contract.newBuilder() to construct.
    private Contract(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Contract(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Contract defaultInstance;
    public static Contract getDefaultInstance() {
      return defaultInstance;
    }

    public Contract getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Contract(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              dispatchAddress_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              dispatchPort_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              secret_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return core.messages.EmploySearcher.internal_static_search_Contract_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return core.messages.EmploySearcher.internal_static_search_Contract_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              core.messages.EmploySearcher.Contract.class, core.messages.EmploySearcher.Contract.Builder.class);
    }

    public static com.google.protobuf.Parser<Contract> PARSER =
        new com.google.protobuf.AbstractParser<Contract>() {
      public Contract parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Contract(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Contract> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string dispatch_address = 1;
    public static final int DISPATCH_ADDRESS_FIELD_NUMBER = 1;
    private java.lang.Object dispatchAddress_;
    /**
     * <code>required string dispatch_address = 1;</code>
     *
     * <pre>
     *The IPv4 address where the Dispatcher can be found.
     *e.g., 127.0.0.1, localhost, etc.
     * </pre>
     */
    public boolean hasDispatchAddress() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string dispatch_address = 1;</code>
     *
     * <pre>
     *The IPv4 address where the Dispatcher can be found.
     *e.g., 127.0.0.1, localhost, etc.
     * </pre>
     */
    public java.lang.String getDispatchAddress() {
      java.lang.Object ref = dispatchAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dispatchAddress_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string dispatch_address = 1;</code>
     *
     * <pre>
     *The IPv4 address where the Dispatcher can be found.
     *e.g., 127.0.0.1, localhost, etc.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDispatchAddressBytes() {
      java.lang.Object ref = dispatchAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dispatchAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 dispatch_port = 2;
    public static final int DISPATCH_PORT_FIELD_NUMBER = 2;
    private int dispatchPort_;
    /**
     * <code>required int32 dispatch_port = 2;</code>
     *
     * <pre>
     *The port that the dispatcher will be listening to.
     * </pre>
     */
    public boolean hasDispatchPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 dispatch_port = 2;</code>
     *
     * <pre>
     *The port that the dispatcher will be listening to.
     * </pre>
     */
    public int getDispatchPort() {
      return dispatchPort_;
    }

    // optional int64 secret = 3;
    public static final int SECRET_FIELD_NUMBER = 3;
    private long secret_;
    /**
     * <code>optional int64 secret = 3;</code>
     *
     * <pre>
     *The secret to share in the communications (should be unique per contract)
     * </pre>
     */
    public boolean hasSecret() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 secret = 3;</code>
     *
     * <pre>
     *The secret to share in the communications (should be unique per contract)
     * </pre>
     */
    public long getSecret() {
      return secret_;
    }

    private void initFields() {
      dispatchAddress_ = "";
      dispatchPort_ = 0;
      secret_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDispatchAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDispatchPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDispatchAddressBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, dispatchPort_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, secret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDispatchAddressBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, dispatchPort_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, secret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static core.messages.EmploySearcher.Contract parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static core.messages.EmploySearcher.Contract parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static core.messages.EmploySearcher.Contract parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static core.messages.EmploySearcher.Contract parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static core.messages.EmploySearcher.Contract parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static core.messages.EmploySearcher.Contract parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static core.messages.EmploySearcher.Contract parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static core.messages.EmploySearcher.Contract parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static core.messages.EmploySearcher.Contract parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static core.messages.EmploySearcher.Contract parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(core.messages.EmploySearcher.Contract prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code search.Contract}
     *
     * <pre>
     *This message comes with the startup of a new core.party.Searcher to
     *let that object know where the dispatcher is, and any other
     *pertinent details needed to get the experimentation architecture
     *up and running.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements core.messages.EmploySearcher.ContractOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return core.messages.EmploySearcher.internal_static_search_Contract_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return core.messages.EmploySearcher.internal_static_search_Contract_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                core.messages.EmploySearcher.Contract.class, core.messages.EmploySearcher.Contract.Builder.class);
      }

      // Construct using core.messages.EmploySearcher.Contract.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        dispatchAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        dispatchPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        secret_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return core.messages.EmploySearcher.internal_static_search_Contract_descriptor;
      }

      public core.messages.EmploySearcher.Contract getDefaultInstanceForType() {
        return core.messages.EmploySearcher.Contract.getDefaultInstance();
      }

      public core.messages.EmploySearcher.Contract build() {
        core.messages.EmploySearcher.Contract result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public core.messages.EmploySearcher.Contract buildPartial() {
        core.messages.EmploySearcher.Contract result = new core.messages.EmploySearcher.Contract(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dispatchAddress_ = dispatchAddress_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dispatchPort_ = dispatchPort_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.secret_ = secret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof core.messages.EmploySearcher.Contract) {
          return mergeFrom((core.messages.EmploySearcher.Contract)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(core.messages.EmploySearcher.Contract other) {
        if (other == core.messages.EmploySearcher.Contract.getDefaultInstance()) return this;
        if (other.hasDispatchAddress()) {
          bitField0_ |= 0x00000001;
          dispatchAddress_ = other.dispatchAddress_;
          onChanged();
        }
        if (other.hasDispatchPort()) {
          setDispatchPort(other.getDispatchPort());
        }
        if (other.hasSecret()) {
          setSecret(other.getSecret());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDispatchAddress()) {
          
          return false;
        }
        if (!hasDispatchPort()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        core.messages.EmploySearcher.Contract parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (core.messages.EmploySearcher.Contract) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string dispatch_address = 1;
      private java.lang.Object dispatchAddress_ = "";
      /**
       * <code>required string dispatch_address = 1;</code>
       *
       * <pre>
       *The IPv4 address where the Dispatcher can be found.
       *e.g., 127.0.0.1, localhost, etc.
       * </pre>
       */
      public boolean hasDispatchAddress() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string dispatch_address = 1;</code>
       *
       * <pre>
       *The IPv4 address where the Dispatcher can be found.
       *e.g., 127.0.0.1, localhost, etc.
       * </pre>
       */
      public java.lang.String getDispatchAddress() {
        java.lang.Object ref = dispatchAddress_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dispatchAddress_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string dispatch_address = 1;</code>
       *
       * <pre>
       *The IPv4 address where the Dispatcher can be found.
       *e.g., 127.0.0.1, localhost, etc.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDispatchAddressBytes() {
        java.lang.Object ref = dispatchAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dispatchAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string dispatch_address = 1;</code>
       *
       * <pre>
       *The IPv4 address where the Dispatcher can be found.
       *e.g., 127.0.0.1, localhost, etc.
       * </pre>
       */
      public Builder setDispatchAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dispatchAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string dispatch_address = 1;</code>
       *
       * <pre>
       *The IPv4 address where the Dispatcher can be found.
       *e.g., 127.0.0.1, localhost, etc.
       * </pre>
       */
      public Builder clearDispatchAddress() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dispatchAddress_ = getDefaultInstance().getDispatchAddress();
        onChanged();
        return this;
      }
      /**
       * <code>required string dispatch_address = 1;</code>
       *
       * <pre>
       *The IPv4 address where the Dispatcher can be found.
       *e.g., 127.0.0.1, localhost, etc.
       * </pre>
       */
      public Builder setDispatchAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dispatchAddress_ = value;
        onChanged();
        return this;
      }

      // required int32 dispatch_port = 2;
      private int dispatchPort_ ;
      /**
       * <code>required int32 dispatch_port = 2;</code>
       *
       * <pre>
       *The port that the dispatcher will be listening to.
       * </pre>
       */
      public boolean hasDispatchPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 dispatch_port = 2;</code>
       *
       * <pre>
       *The port that the dispatcher will be listening to.
       * </pre>
       */
      public int getDispatchPort() {
        return dispatchPort_;
      }
      /**
       * <code>required int32 dispatch_port = 2;</code>
       *
       * <pre>
       *The port that the dispatcher will be listening to.
       * </pre>
       */
      public Builder setDispatchPort(int value) {
        bitField0_ |= 0x00000002;
        dispatchPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 dispatch_port = 2;</code>
       *
       * <pre>
       *The port that the dispatcher will be listening to.
       * </pre>
       */
      public Builder clearDispatchPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dispatchPort_ = 0;
        onChanged();
        return this;
      }

      // optional int64 secret = 3;
      private long secret_ ;
      /**
       * <code>optional int64 secret = 3;</code>
       *
       * <pre>
       *The secret to share in the communications (should be unique per contract)
       * </pre>
       */
      public boolean hasSecret() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 secret = 3;</code>
       *
       * <pre>
       *The secret to share in the communications (should be unique per contract)
       * </pre>
       */
      public long getSecret() {
        return secret_;
      }
      /**
       * <code>optional int64 secret = 3;</code>
       *
       * <pre>
       *The secret to share in the communications (should be unique per contract)
       * </pre>
       */
      public Builder setSecret(long value) {
        bitField0_ |= 0x00000004;
        secret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 secret = 3;</code>
       *
       * <pre>
       *The secret to share in the communications (should be unique per contract)
       * </pre>
       */
      public Builder clearSecret() {
        bitField0_ = (bitField0_ & ~0x00000004);
        secret_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.Contract)
    }

    static {
      defaultInstance = new Contract(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:search.Contract)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_search_Contract_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_search_Contract_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016contract.proto\022\006search\"K\n\010Contract\022\030\n\020" +
      "dispatch_address\030\001 \002(\t\022\025\n\rdispatch_port\030" +
      "\002 \002(\005\022\016\n\006secret\030\003 \001(\003B\037\n\rcore.messagesB\016" +
      "EmploySearcher"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_search_Contract_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_search_Contract_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_search_Contract_descriptor,
              new java.lang.String[] { "DispatchAddress", "DispatchPort", "Secret", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
